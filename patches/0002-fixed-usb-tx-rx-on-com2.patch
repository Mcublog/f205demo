From 23a4c7f994925ea9c0cd1d6fa477f0570359ad2e Mon Sep 17 00:00:00 2001
From: Viacheslav <v.konovalov@crystals.ru>
Date: Tue, 20 Jun 2023 11:29:31 +0300
Subject: [PATCH 2/3] fixed usb tx rx on com2

---
 .../Class/CDC/Src/usbd_cdc.c                  | 127 +++++++++++++-----
 1 file changed, 93 insertions(+), 34 deletions(-)

diff --git a/cubemx/f205/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src/usbd_cdc.c b/cubemx/f205/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src/usbd_cdc.c
index a3d9c1e..bee0b48 100644
--- a/cubemx/f205/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src/usbd_cdc.c
+++ b/cubemx/f205/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src/usbd_cdc.c
@@ -669,71 +669,118 @@ __ALIGN_BEGIN uint8_t USBD_CDC_OtherSpeedCfgDesc[USB_CDC_CONFIG_DESC_SIZ] __ALIG
   */
 static uint8_t  USBD_CDC_Init(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
 {
-  uint8_t ret = 0U;
+  uint8_t ret = 0;
   USBD_CDC_HandleTypeDef   *hcdc;
 
-  if (pdev->dev_speed == USBD_SPEED_HIGH)
+  if(pdev->dev_speed == USBD_SPEED_HIGH  )
   {
     /* Open EP IN */
-    USBD_LL_OpenEP(pdev, CDC_IN_EP, USBD_EP_TYPE_BULK,
+    USBD_LL_OpenEP(pdev,
+                   CDC_IN_EP,
+                   USBD_EP_TYPE_BULK,
                    CDC_DATA_HS_IN_PACKET_SIZE);
 
-    pdev->ep_in[CDC_IN_EP & 0xFU].is_used = 1U;
-
     /* Open EP OUT */
-    USBD_LL_OpenEP(pdev, CDC_OUT_EP, USBD_EP_TYPE_BULK,
+    USBD_LL_OpenEP(pdev,
+                   CDC_OUT_EP,
+                   USBD_EP_TYPE_BULK,
                    CDC_DATA_HS_OUT_PACKET_SIZE);
+    /* Open EP IN */
+    USBD_LL_OpenEP(pdev,
+                   CDC_IN_EP+2,
+                   USBD_EP_TYPE_BULK,
+                   CDC_DATA_HS_IN_PACKET_SIZE);
 
-    pdev->ep_out[CDC_OUT_EP & 0xFU].is_used = 1U;
+    /* Open EP OUT */
+    USBD_LL_OpenEP(pdev,
+                   CDC_OUT_EP+2,
+                   USBD_EP_TYPE_BULK,
+                   CDC_DATA_HS_OUT_PACKET_SIZE);
 
   }
   else
   {
     /* Open EP IN */
-    USBD_LL_OpenEP(pdev, CDC_IN_EP, USBD_EP_TYPE_BULK,
+    USBD_LL_OpenEP(pdev,
+                   CDC_IN_EP,
+                   USBD_EP_TYPE_BULK,
                    CDC_DATA_FS_IN_PACKET_SIZE);
 
-    pdev->ep_in[CDC_IN_EP & 0xFU].is_used = 1U;
-
     /* Open EP OUT */
-    USBD_LL_OpenEP(pdev, CDC_OUT_EP, USBD_EP_TYPE_BULK,
+    USBD_LL_OpenEP(pdev,
+                   CDC_OUT_EP,
+                   USBD_EP_TYPE_BULK,
                    CDC_DATA_FS_OUT_PACKET_SIZE);
+    /* Open EP IN */
+    USBD_LL_OpenEP(pdev,
+                   CDC_IN_EP+2,
+                   USBD_EP_TYPE_BULK,
+                   CDC_DATA_FS_IN_PACKET_SIZE);
 
-    pdev->ep_out[CDC_OUT_EP & 0xFU].is_used = 1U;
+    /* Open EP OUT */
+    USBD_LL_OpenEP(pdev,
+                   CDC_OUT_EP+2,
+                   USBD_EP_TYPE_BULK,
+                   CDC_DATA_FS_OUT_PACKET_SIZE);
   }
   /* Open Command IN EP */
-  USBD_LL_OpenEP(pdev, CDC_CMD_EP, USBD_EP_TYPE_INTR, CDC_CMD_PACKET_SIZE);
-  pdev->ep_in[CDC_CMD_EP & 0xFU].is_used = 1U;
+  USBD_LL_OpenEP(pdev,
+                 CDC_CMD_EP,
+                 USBD_EP_TYPE_INTR,
+                 CDC_CMD_PACKET_SIZE);
+
+  /* Open Command IN EP */
+  USBD_LL_OpenEP(pdev,
+                 CDC_CMD_EP+2,
+                 USBD_EP_TYPE_INTR,
+                 CDC_CMD_PACKET_SIZE);
+
 
-  pdev->pClassData = USBD_malloc(sizeof(USBD_CDC_HandleTypeDef));
+  pdev->pClassData = USBD_malloc(sizeof (USBD_CDC_HandleTypeDef));
 
-  if (pdev->pClassData == NULL)
+  if(pdev->pClassData == NULL)
   {
-    ret = 1U;
+    ret = 1;
   }
   else
   {
-    hcdc = (USBD_CDC_HandleTypeDef *) pdev->pClassData;
+    hcdc = (USBD_CDC_HandleTypeDef*) pdev->pClassData;
 
     /* Init  physical Interface components */
     ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Init();
 
     /* Init Xfer states */
-    hcdc->TxState = 0U;
-    hcdc->RxState = 0U;
+    hcdc->TxState =0;
+    hcdc->RxState =0;
 
-    if (pdev->dev_speed == USBD_SPEED_HIGH)
+    if(pdev->dev_speed == USBD_SPEED_HIGH  )
     {
       /* Prepare Out endpoint to receive next packet */
-      USBD_LL_PrepareReceive(pdev, CDC_OUT_EP, hcdc->RxBuffer,
+      USBD_LL_PrepareReceive(pdev,
+                             CDC_OUT_EP,
+                             hcdc->RxBuffer,
+                             CDC_DATA_HS_OUT_PACKET_SIZE);
+      /* Prepare Out endpoint to receive next packet */
+      USBD_LL_PrepareReceive(pdev,
+                             CDC_OUT_EP+2,
+                             hcdc->RxBuffer,
                              CDC_DATA_HS_OUT_PACKET_SIZE);
     }
     else
     {
       /* Prepare Out endpoint to receive next packet */
-      USBD_LL_PrepareReceive(pdev, CDC_OUT_EP, hcdc->RxBuffer,
+      USBD_LL_PrepareReceive(pdev,
+                             CDC_OUT_EP,
+                             hcdc->RxBuffer,
+                             CDC_DATA_FS_OUT_PACKET_SIZE);
+      /* Prepare Out endpoint to receive next packet */
+      USBD_LL_PrepareReceive(pdev,
+                             CDC_OUT_EP+2,
+                             hcdc->RxBuffer,
                              CDC_DATA_FS_OUT_PACKET_SIZE);
     }
+
+
   }
   return ret;
 }
@@ -747,22 +794,34 @@ static uint8_t  USBD_CDC_Init(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
   */
 static uint8_t  USBD_CDC_DeInit(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
 {
-  uint8_t ret = 0U;
+  uint8_t ret = 0;
+
+  /* Open EP IN */
+  USBD_LL_CloseEP(pdev,
+              CDC_IN_EP);
+
+  /* Open EP OUT */
+  USBD_LL_CloseEP(pdev,
+              CDC_OUT_EP);
 
-  /* Close EP IN */
-  USBD_LL_CloseEP(pdev, CDC_IN_EP);
-  pdev->ep_in[CDC_IN_EP & 0xFU].is_used = 0U;
+  /* Open Command IN EP */
+  USBD_LL_CloseEP(pdev,
+              CDC_CMD_EP);
+
+  /* Open EP IN */
+  USBD_LL_CloseEP(pdev,
+              CDC_IN_EP+2);
 
-  /* Close EP OUT */
-  USBD_LL_CloseEP(pdev, CDC_OUT_EP);
-  pdev->ep_out[CDC_OUT_EP & 0xFU].is_used = 0U;
+  /* Open EP OUT */
+  USBD_LL_CloseEP(pdev,
+              CDC_OUT_EP+2);
 
-  /* Close Command IN EP */
-  USBD_LL_CloseEP(pdev, CDC_CMD_EP);
-  pdev->ep_in[CDC_CMD_EP & 0xFU].is_used = 0U;
+  /* Open Command IN EP */
+  USBD_LL_CloseEP(pdev,
+              CDC_CMD_EP+2);
 
   /* DeInit  physical Interface components */
-  if (pdev->pClassData != NULL)
+  if(pdev->pClassData != NULL)
   {
     ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->DeInit();
     USBD_free(pdev->pClassData);
-- 
2.34.1

